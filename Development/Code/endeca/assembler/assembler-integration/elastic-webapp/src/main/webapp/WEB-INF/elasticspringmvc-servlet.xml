<?xml version="1.0" encoding="UTF-8"?>

<!-- ~ Copyright 2001, 2014, Oracle and/or its affiliates. All rights reserved. 
	~ Oracle and Java are registered trademarks of Oracle and/or its ~ affiliates. 
	Other names may be trademarks of their respective owners. ~ UNIX is a registered 
	trademark of The Open Group. ~ ~ This software and related documentation 
	are provided under a license ~ agreement containing restrictions on use and 
	disclosure and are ~ protected by intellectual property laws. Except as expressly 
	permitted ~ in your license agreement or allowed by law, you may not use, 
	copy, ~ reproduce, translate, broadcast, modify, license, transmit, distribute, 
	~ exhibit, perform, publish, or display any part, in any form, or by any 
	~ means. Reverse engineering, disassembly, or decompilation of this ~ software, 
	unless required by law for interoperability, is prohibited. ~ The information 
	contained herein is subject to change without notice ~ and is not warranted 
	to be error-free. If you find any errors, please ~ report them to us in writing. 
	~ U.S. GOVERNMENT END USERS: Oracle programs, including any operating ~ system, 
	integrated software, any programs installed on the hardware, ~ and/or documentation, 
	delivered to U.S. Government end users are ~ "commercial computer software" 
	pursuant to the applicable Federal ~ Acquisition Regulation and agency-specific 
	supplemental regulations. ~ As such, use, duplication, disclosure, modification, 
	and adaptation ~ of the programs, including any operating system, integrated 
	software, ~ any programs installed on the hardware, and/or documentation, 
	shall be ~ subject to license terms and license restrictions applicable to 
	the ~ programs. No other rights are granted to the U.S. Government. ~ This 
	software or hardware is developed for general use in a variety ~ of information 
	management applications. It is not developed or ~ intended for use in any 
	inherently dangerous applications, including ~ applications that may create 
	a risk of personal injury. If you use ~ this software or hardware in dangerous 
	applications, then you shall ~ be responsible to take all appropriate fail-safe, 
	backup, redundancy, ~ and other measures to ensure its safe use. Oracle Corporation 
	and its ~ affiliates disclaim any liability for any damages caused by use 
	of this ~ software or hardware in dangerous applications. ~ This software 
	or hardware and documentation may provide access to or ~ information on content, 
	products, and services from third parties. ~ Oracle Corporation and its affiliates 
	are not responsible for and ~ expressly disclaim all warranties of any kind 
	with respect to ~ third-party content, products, and services. Oracle Corporation 
	and ~ its affiliates will not be responsible for any loss, costs, or damages 
	~ incurred due to your access to or use of third-party content, products, 
	~ or services. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<context:annotation-config />

	<context:component-scan base-package="com.elastic.controllers" />

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- Create a properties object -->
	<bean id="properties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location"
			value="file:${CATALINA_BASE}/config/SEBluesv/environment.properties" />
	</bean>

	<bean id="overrideConfigurer"
		class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
		<property name="location"
			value="file:${CATALINA_BASE}/config/SEBluesv/environment.properties" />
		<property name="ignoreInvalidKeys" value="true" />
	</bean>
	<!-- Expose the properties object to spring -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="properties" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<import resource="classpath:anite-impl-spring.xml" />
	<import resource="classpath:search-api-anite-impl-spring.xml" />

	<util:map id="allDestinationRollUpkey">
		<entry key="continent">
			<value>p_countryCode</value>
			<!-- <value>p_resortCode</value> -->
		</entry>
		<entry key="country">
			<value>p_resortCode</value>
		</entry>
		<!-- 19232 -->
		<entry key="allCountries">
			<value>p_destinationCode</value>
		</entry>
	</util:map>

	<util:map id="allDestinationFetchingkey">
		<entry key="p_countryCode" value-ref="continentFectKeyRefMap" />
		<entry key="p_resortCode" value-ref="countryFectKeyRefMap" />
		<!-- 19232 -->
		<entry key="p_destinationCode" value-ref="destinationFectKeyRefMap" />
	</util:map>

	<util:map id="continentFectKeyRefMap">
		<entry key="parent" value="continent"></entry>
		<entry key="child" value="country"></entry>
	</util:map>

	<!-- 19232 -->
	<util:map id="destinationFectKeyRefMap">
		<entry key="parent" value="country"></entry>
		<entry key="child" value="resort"></entry>
	</util:map>

	<util:map id="countryFectKeyRefMap">
		<entry key="elderParent" value="region"></entry>
		<entry key="parentCountry" value="country"></entry>
		<entry key="parent" value="destination"></entry>
		<entry key="child" value="resort"></entry>
	</util:map>


	<!-- this Map is used for sorting , all properties on which sorting has 
		to be performed will be configured here , these are mapped with those in 
		Hybris -->

	<util:map id="sortingKeyMap">
		<entry key="accommodationName" value="p_accommodationName"></entry>
		<entry key="accommodationRating" value="p_accommodationRating"></entry>
		<entry key="customerRating" value="p_customerRating"></entry>
		<entry key="discountPrice" value="OfferData.discountedPrice"></entry>
		<entry key="discountPricePerPerson" value="OfferData.discountedPricePerson"></entry>
		<entry key="commPriority" value="p_commercialPriority"></entry>
		<entry key="discountAmount" value="RoomData.unitDiscount"></entry>
		<entry key="departureTime" value="FlightData.departureDateTime"></entry>
		<entry key="arrivalTime" value="FlightData.arrivalDateTime"></entry>
	</util:map>

	<!-- End -->

	<bean id="globalAniteParametersProvider"
		class="com.endeca.search.api.anite.paramteres.provider.impl.DefaultAniteParametersProvider"
		scope="singleton">
		<property name="allowedPassthroughKeys">
			<description>List of parameters names that pass straight through to
				Anite
			</description>
			<list>
				<value>max_prc</value>
				<value>rm_n</value>
				<value>slot_o</value>
				<value>slot_i</value>
				<value>seat_tp</value>
				<value>dow</value>
				<value>disc_tp</value>
				<value>f_no</value>
				<value>f</value>
			</list>
		</property>
		<property name="allowedPassthroughPatterns">
			<description>List of parameters name patterns that pass straight
				through to Anite
			</description>
			<list>
				<value>rm_\d+</value><!-- e.g. "rm_1", "rm_2", "rm_12345" -->
				<value>f_\d+</value><!-- e.g. "f_1", "f_2", "f_12345" -->
				<value>fa_\d+</value><!-- as above -->
				<value>fo_\d+</value><!-- as above -->
			</list>
		</property>
	</bean>

	<bean id="searchBrandAdapter" class="com.endeca.search.api.adapters.BrandAdapter">
		<property name="delimiter" value="|" />
		<property name="appName" value="${workbench.app.name}" />
	</bean>



	<bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	<!-- added for null check -->

	<bean id="jacksonSerializationConfig" factory-bean="jacksonObjectMapper"
		factory-method="getSerializationConfig">
	</bean>

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="jacksonSerializationConfig" />
		<property name="targetMethod" value="setSerializationInclusion" />
		<property name="arguments">
			<list>
				<value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_NULL</value>
			</list>
		</property>
	</bean>

</beans>